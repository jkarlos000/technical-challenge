name: build
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: beer
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      
      postgres-currency:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: currency
        ports:
          - 54321:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - uses: actions/checkout@v2 

      - uses: dorny/paths-filter@v2
        id: filter
        with: 
          filters: |
            beer-api:
              - 'beer-api/**'
            currency:
              - 'currency/**'
      
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Get dependencies
        if: steps.filter.outputs.currency == 'true'
        working-directory: currency
        run: |
          go mod tidy
          go mod download
          go mod verify
          go get golang.org/x/tools/cmd/cover
          go get github.com/mattn/goveralls
          go get golang.org/x/lint/golint
          go install google.golang.org/grpc
          go get github.com/go-swagger/go-swagger/cmd/swagger
          GO111MODULE=on go install github.com/go-swagger/go-swagger/cmd/swagger
      
      - name: Get dependencies
        if: steps.filter.outputs.beer-api == 'true'
        working-directory: beer-api
        run: |
          go mod tidy
          go mod download
          go mod verify
          go get golang.org/x/tools/cmd/cover
          go get github.com/mattn/goveralls
          go get golang.org/x/lint/golint
          go install google.golang.org/grpc
          go get github.com/go-swagger/go-swagger/cmd/swagger
          GO111MODULE=on go install github.com/go-swagger/go-swagger/cmd/swagger


      - name: Run go lint
        if: steps.filter.outputs.currency == 'true'
        working-directory: currency
        run: make lint

      - name: Run go lint
        if: steps.filter.outputs.beer-api == 'true'
        working-directory: beer-api
        run: make lint
      
      - name: Run go generate
        if: steps.filter.outputs.currency == 'true'
        working-directory: currency
        run: go generate ./...

      - name: Run go generate
        if: steps.filter.outputs.beer-api == 'true'
        working-directory: beer-api
        run: go generate ./...

      - name: Build
        if: steps.filter.outputs.currency == 'true'
        working-directory: currency
        run: make build
      
      - name: Build
        if: steps.filter.outputs.beer-api == 'true'
        working-directory: beer-api
        run: make build

      - name: Test
        if: steps.filter.outputs.currency == 'true'
        working-directory: currency
        env:
          APP_DSN: postgres://127.0.0.1:${{ job.services.postgres-currency.ports[54321] }}/currency?sslmode=disable&user=postgres&password=postgres
        run: |
          make migrate
          make test-cover
      
      - name: Test
        if: steps.filter.outputs.beer-api == 'true'
        working-directory: beer-api
        env:
          APP_DSN: postgres://127.0.0.1:${{ job.services.postgres.ports[5432] }}/beer?sslmode=disable&user=postgres&password=postgres
        run: |
          make migrate
          make test-cover

      - name: Upload coverage to Codecov
        if: steps.filter.outputs.currency == 'true'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./currency/coverage-all.out
          run: bash <(curl -s https://codecov.io/bash)
      
      - name: Upload coverage to Codecov
        if: steps.filter.outputs.beer-api == 'true'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./beer-api/coverage-all.out
          run:  bash <(curl -s https://codecov.io/bash)
